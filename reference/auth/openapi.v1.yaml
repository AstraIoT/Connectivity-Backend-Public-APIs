openapi: 3.0.0
tags:
  - name: auth
    description: Authentication and authorization related operations.
info:
  title: Auth API
  version: '1.0'
  description: The Auth API provides authentication to all applying clients.
  contact:
    name: Software team
    email: software@astraiot.co.uk
servers:
  - url: 'https://connectivity.astraiot.co.uk:443/api/auth/v1'
    description: Production
  - url: 'https://sandbox.connectivity.astraiot.co.uk:443/api/auth/v1'
    description: Sandbox
paths:
  /token:
    post:
      summary: Obtain authentication token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/oauth2token.v1.yaml
        '401':
          description: Wrong ClientId or ApiKey.
          headers: {}
          content:
            application/json:
              schema:
                $ref: ../common/models/error/genericerror.v1.yaml
      description: This endpoint provides an OAuth2 token to use for authentication of subsequent requests to this backend.
      security:
        - Basic: []
      operationId: getAuthToken
      tags:
        - auth
    parameters: []
components:
  schemas: {}
  securitySchemes:
    Basic:
      type: http
      scheme: basic
      description: |-
        To authenticate each and every one of the requests made to this API using this security scheme, you should provide a "ClientId:ApiKey" string encoded in Base64 and add the string "Basic " to the front, like this:
        ```
        Authorization: Basic ${base64EncodedToken}
        ```
        Take into account that you are sending your API key in plain text in every request, so consider using the OAuth2 security scheme to authenticate your requests instead.
    OAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://connectivity.astraiot.co.uk:443/api/auth/v1/token'
          scopes: {}
      description: |-
        Make a request with `Basic Access Authentication`, like is explained above, to the **Token URL** displayed at the bottom to obtain an authorization token.

        Then, in each of the requests that you make to this API, you should provide the obtained token in the  `Authorization` header, like this:
        ```
        Authorization: Bearer ${token}
        ```
        Take into account that the token obtained through the **Token URL** has a TTL, so be sure to ensure its renewal.
security:
  - Basic: []
  - OAuth2: []
