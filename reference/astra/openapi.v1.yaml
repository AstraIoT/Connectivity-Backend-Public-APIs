openapi: 3.0.0
tags:
  - name: driver-id
    description: Driver ID related functionality.
info:
  title: Astra
  version: '1.0'
  description: The Astra API provides Astra-specific functions.
  contact:
    name: Miguel Vera
    email: miguel@astraiot.co.uk
    url: 'https://www.linkedin.com/in/mikiloz'
servers:
  - url: 'https://connectivity.gps-telematics.co.uk:3000/astra'
    description: Astra
components:
  schemas:
    DriverId:
      title: DriverId
      type: object
      description: A Driver ID.
      properties:
        iButtonFamilyCode:
          type: integer
          nullable: true
          description: 'iButton family code, if the source is an iButton. If not, this will be `null`.'
          minimum: 1
          maximum: 255
          multipleOf: 1
        serialNumber:
          type: string
          description: ID serial number as a string of 8 consecutive hexadecimal bytes.
          example: 001D001FCDA3B8FF
          minLength: 16
          maxLength: 16
          pattern: '^[0-9a-fA-F]{16}'
      required:
        - iButtonFamilyCode
        - serialNumber
      x-tags:
        - models
    DriverIdConfiguration:
      title: DriverIdConfiguration
      allOf:
        - $ref: '#/components/schemas/DriverId'
        - $ref: '#/components/schemas/DriverIdStatus'
      description: A Driver ID configuration.
      x-tags:
        - models
    DriverIdStatus:
      type: object
      title: DriverIdStatus
      description: Approval status of a Driver ID.
      properties:
        status:
          type: string
          description: Approval status of a Driver ID.
          enum:
            - APPROVED
            - DECLINED
      x-tags:
        - models
  securitySchemes:
    ClientPassword:
      type: http
      scheme: Basic
      description: Use the authentication bearer token obtained from the `/auth/token` endpoint.
paths:
  '/devices/{deviceId}/driverId':
    post:
      summary: Add new Driver ID(s)
      operationId: addDriverIds
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request. Check that you have provided addecuate Driver ID(s).
          content:
            application/json:
              schema:
                $ref: ../common/models/error/genericerror.v1.yaml
        '404':
          description: Could not find a device by the provided ID.
          content:
            application/json:
              schema:
                $ref: ../common/models/error/genericerror.v1.yaml
      description: |-
        Approve or decline one or multiple Driver IDs for this device. Any already existing Driver IDs will be overwritten with the newly provided configuration.

        The backend will store the provided Driver ID configurations and act accordingly when a request for authorization is received from the device.
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/DriverIdConfiguration'
                - type: array
                  description: Array of multiple Driver ID configuration requests.
                  items:
                    $ref: '#/components/schemas/DriverIdConfiguration'
        description: 'You can provide a single Driver ID, in a JSON object, or multiple Driver IDs, in a JSON array.'
      security:
        - ClientPassword: []
      tags:
        - driver-id
    parameters:
      - schema:
          type: string
        name: deviceId
        in: path
        description: A UUID that represents a device.
        required: true
    get:
      summary: Get all Driver IDs
      tags:
        - driver-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                minItems: 1
                description: An array of Driver ID objects.
                items:
                  $ref: '#/components/schemas/DriverIdConfiguration'
        '204':
          description: No Driver IDs added for this device yet.
      operationId: getAllDriverIds
      description: Get the list of both approved and declined Driver IDs for this device.
      security:
        - ClientPassword: []
    delete:
      summary: Delete Driver ID(s)
      operationId: deleteDriverIds
      responses:
        '200':
          description: OK
        '404':
          description: Could not find a device by the provided ID.
      description: |-
        Delete one or more Driver IDs; the backend will not approve nor decline the provided Driver IDs any longer when receiving a request from the device.

        If the HTTP request syntax is OK but any or all of the provided Driver IDs are not found in the backend for this device, the HTTP request will still run happily and return a 200 HTTP code.
      security:
        - ClientPassword: []
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/DriverId'
                - type: array
                  description: Array of multiple Driver IDs.
                  items:
                    $ref: '#/components/schemas/DriverId'
        description: 'You can provide a single Driver ID, in a JSON object, or multiple Driver IDs, in a JSON array.'
      tags:
        - driver-id
